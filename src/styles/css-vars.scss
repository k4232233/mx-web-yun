@use './vars' as *;
@use "./mixins" as *;
@use "./vars" as *;

$c-primary: #0078E7 !default;

@use "./palette" with (
  $colors: (
    'primary': $c-primary,
  )
);

:root {
  @include set-css-var-from-map($common);
  @include set-css-var-from-map($z-index, 'z');
}

:root {
  @include set-css-var-from-map($light);
}

html.dark {
  @include set-css-var-from-map($dark);
}

// common
:root {
  @include set-css-var-from-map($common);
  @include set-css-var-from-map($border, 'border');
  @include set-css-var-from-map($font, 'font');
  @include set-css-var-from-map($transition, 'transition'); 
}

// colors
:root {
  // palette different with colors
  @include set-css-var-from-map(palette.$palette, 'c');
  // primary
  @include set-css-var-from-map(palette.$colors, 'c');
}

// light
:root {
  color-scheme: light;
  @include set-css-var-from-map(palette.$light);
}

// dark
html.dark {
  color-scheme: dark;
  @include set-css-var-from-map(palette.$dark);
}



// common
:root {
  @include set-css-var-from-map($common);
  @include set-css-var-from-map($border, 'border');
  @include set-css-var-from-map($font, 'font');
  @include set-css-var-from-map($transition, 'transition'); 
}

// colors
:root {
  // palette different with colors
  @include set-css-var-from-map(palette.$palette, 'c');
  // primary
  @include set-css-var-from-map(palette.$colors, 'c');
}

// light
:root {
  color-scheme: light;
  @include set-css-var-from-map(palette.$light);
}

// dark
html.dark {
  color-scheme: dark;
  @include set-css-var-from-map(palette.$dark);
}
